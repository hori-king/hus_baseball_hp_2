name: Deploy to Sakura VPS

# mainブランチにpushされた時に、この自動化を実行する
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    # ubuntuの最新版の仮想環境で実行する
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    # 1. リポジトリのコードをチェックアウト（ダウンロード）
    - name: Checkout Repository
      uses: actions/checkout@v4

    # 2. Java 21の環境をセットアップ
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # 3. gradlewファイルに実行権限を与える
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    # 4. Gradleでビルドを実行（テストはスキップ）
    - name: Build with Gradle
      run: ./gradlew build -x test

    # 5. 新しいJARファイルをサーバーの一時ディレクトリに転送
    - name: SCP JAR file to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        source: "build/libs/*.jar"
        target: "~/temp-deploy"
        strip_components: 2

    # 6. サーバー上でデプロイと再起動を実行
    - name: Deploy and Restart Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          # 実行中の古いアプリケーションを特定して停止
          pkill -f 'hus_baseball_hp' || true
          sleep 5
          
          # アプリケーション用ディレクトリがなければ作成
          mkdir -p /opt/jyunko-app
          
          # 古いファイルを削除
          rm -f /opt/jyunko-app/*.jar
          rm -f /opt/jyunko-app/app.log
          
          # 一時ディレクトリから新しいJARファイルを移動
          mv ~/temp-deploy/*.jar /opt/jyunko-app/
          
          # .envファイルを作成
          echo "${{ secrets.ENV_FILE }}" > /opt/jyunko-app/.env
          
          # アプリケーションをバックグラウンドで起動
          cd /opt/jyunko-app
          nohup java -jar *.jar > app.log 2>&1 &
          
          # 一時ディレクトリをクリーンアップ
          rm -rf ~/temp-deploy
